#!/usr/bin/env ruby

require 'git/contest/common'
require 'trollop'

init

$config  = get_config()
$sites   = $config["sites"]

$drivers = {}
$drivers["codeforces"]        = Git::Contest::Driver::Codeforces
$drivers["aizu_online_judge"] = Git::Contest::Driver::AizuOnlineJudge
$drivers["uva_online_judge"]  = Git::Contest::Driver::UvaOnlineJudge

def usage
  puts get_banner
  return 0
end

def get_banner
  res = ""
  res += "usage: git contest submit <site>\n"
  res += "\n"
  res += "Available sites are:\n"
  $sites.keys().each do |site|
    if $drivers.has_key? $sites[site]["driver"]
      driver = $drivers[$sites[site]["driver"]].new
      res += "  %-12s\t#{driver.get_desc}\n" % [site]
    else
      # TODO: driver not found
    end
  end
  res += "\n"
  res += "Try 'git contest submit <site> --help' for details.\n"
  return res
end

# check options
sub_commands = $sites.keys
global_opts = Trollop::options do
  version "git-contest #{Git::Contest::VERSION} (c) 2013 Hiroyuki Sano"
  banner get_banner
  stop_on sub_commands
end

# detect site
site = ARGV.shift.to_s.strip

unless $sites.has_key?(site)
  if site != ""
    puts "site not found"
  else
    usage
  end
  exit 0
end

# detect driver
driver_name = $sites[site]["driver"]

unless $drivers.has_key?(driver_name)
  puts "driver not found"
  exit
end

driver = $drivers[driver_name].new

# set events
driver.on(
  'start',
  Proc.new do
    puts "start submit"
  end
)
driver.on(
  'before_submit',
  Proc.new do
    puts "doing..."
  end
)
driver.on(
  'after_submit',
  Proc.new do
    puts "done"
  end
)
driver.on(
  'before_wait',
  Proc.new do
    puts "waiting..."
  end
)
driver.on(
  'after_wait',
  Proc.new do |submission_info|
    next unless submission_info.is_a?(Hash)
    puts "# Submission Result"
    puts "  %s: %s" % ["submission id", "#{submission_info[:submission_id]}"]
    puts "  %s: %s" % ["status", "#{submission_info[:status]}"]
  end
)
driver.on(
  'finish',
  Proc.new do
    puts "finish"
  end
)

opts = driver.get_opts()
result = driver.submit $sites[site], "main.rb", opts

if git_contest_is_initialized
  git_do 'add main.rb'
  git_do "commit --allow-empty -m '#{result}'"
end
